
comp = null
shell = null
file = null

//Function---------------------------------------

// Main function
    // Executes exploit

scan_meta = function(address, port)
    input = validInput()

	net_session = metaxploit.net_use( address, port )
	if not net_session then exit("Error: can't connect to net session") end if
	metaLib = net_session.dump_lib
	memory = metaxploit.scan(metaLib)

	for mem in memory
		address = metaxploit.scan_address(metaLib,mem).split("Unsafe check:")

		for add in address
			if add == address[0] then continue end if

			value = add[add.indexOf("<b>")+3:add.indexOf("</b>")]
			value = value.replace("\n", "")			
			result = metaLib.overflow(mem, value)
            typeObject = typeof(result)

            if typeObject != "shell" and typeObject != "cumputer" then continue

            checkShell(typeObject, result)
            checkComp(typeObject, result)
            checkFile(typeObject, result)

            if input == 1 then
                getMail()
                if Mail then quit()
            else if input == 2 then
                getPass()
                if Pass then quit()
            end if
        end for
    end for
end function


// Formating the result to someting the exploit can use.

checkShell = function(typeObject, result)
    if typeObject != "shell" then return
    globals.shell = result
    globals.comp = shell.host_computer
end function

checkComp = function(typeObject, result)
    if typeObject != "computer" then return
    globals.comp = result
end function

checkFile = function(typeObject, result)
    if typeObject != "file" then return
    globals.file = result
end function


// Prints stuff

getMail = function()
    Mail = false
    info = ""

    if comp then userFolders = comp.File("/home").get_folders
    if file then
        while file.path != "/"
            file = file.parent
        end while

        folders = file.get_folders

        for folder in folders
            if folder.path == "/home" then file = folder
        end for

        userFolders = file.get_folders
    end if

    for userFolder in userFolders
        if comp then mailFile = comp.File("/home/" + userFolder.name + "/Config/Mail.txt")
        if file then
            folders = userFolder.get_folders
            for folder in folders
                if folder.name != "Config" then continue
                files = folder.get_files
                for file in files
                    if file.name != "Mail.txt" then continue
                    mailFile = file
                end for
            end for
        end if

        if not mailFile then continue
        if not mailFile.has_permission("r") then
            print("Error: can't read file contents. Permission deniend")
            continue
        else
            userMail = mailFile.get_content.split(":")
            MailPass = GetPasswordMail(userMail)
            if not MailPass then continue
            info = info + "<b>Mail account: " + userMail[0] +"\n<b>Mail Password: " + MailPass + "\n" + "\n"
            globals.Mail = true
            mailFile = null
        end if
    end for
    print(info)
end function

getPass = function()
    Pass = false
    info = ""

    if comp then userPasswd = comp.File("/etc/passwd")
    if file then
        while file.path != "/"
            file = file.parent
        end while

        folders = file.get_folders

        for folder in folders
            if folder.name != "etc" then continue
            passFiles = folder.get_files
        end for

        for passFile in passFiles
            if passFile.name != "passwd" then continue
            userPasswd = passFile
        end for
    end if

    if not userPasswd or not userPasswd.has_permission("r") or userPasswd.is_binary then
        print("Error: Can't access file or file is binary")
        return
    end if

    listUsers = userPasswd.get_content.split("\n")
    
    for user in listUsers
        UserPassword = user.split(":")
        password = GetPasswordUser(UserPassword)
        if not password then continue
        info = info + "<b>User: " + UserPassword[0] + "\n<b>Password: " + password + "\n" + "\n"
        globals.Pass = true
    end for
    print(info)
end function

// Decipher password

GetPasswordMail = function(userMail)
    if userMail.len != 2 then return
    password = cryptools.decipher(userMail[1])
    return password
end function

GetPasswordUser = function(UserPassword)
    if UserPassword.len != 2 then return
    password = cryptools.decipher(UserPassword[1])
    return password
end function

// More stuff

validInput = function()
    while true
        print("\n")
        print("1: Mailaccounts" + "\n2: Passwords")
        input = user_input("Choose: ").trim
        
        if input < 1 then
            print("Invalid input")
        else if input > 2 then
            print("Invalid input")
        else
            break
        end if
    end while
    return input
end function

quit = function()
    exit("Exploit successful")
end function

//Code--------------------------------------------------

if params.len != 2 or params[0] == "-h" or params[0] == "-help" then exit("<b>Usage: " + program_path.split("/")[-1] + " [ipAddresse] [port]")
address = params[0]
port = params[1].to_int
if not is_valid_ip(address) then exit("Invalid ip")

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then metaxploit = include_lib(current_path + "/metaxploit.so")
if not metaxploit then exit("Metaxploit not found")

cryptools = include_lib("/lib/crypto.so")
if not cryptools then include_lib(current_path + "/crypto.so")
if not cryptools then exit("Crypto not found")

scan_meta(address, port)
print("Exploit failed")