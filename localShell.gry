Version = "v_1.0.2"

comp = null
shell = null
pass = null

//Function------------------------------

// Decipher

GetPassword = function(UserPass)
	if UserPass.len != 2 then return "decipher: wrong syntax"
	password = cryptools.decipher(UserPass[1])
	return password
end function

// Quits function if shell and password

quit = function(shell, pass)
	if cryptools then
		UserPass = pass.split(":")
		User = UserPass[0]
		password = GetPassword(UserPass)
		print("<b>User: " + User + "\n<b>Password: " + password)
	else
		print("<b>" + pass)
	end if
	shell.start_terminal
end function

// Main function
	// Executes exploit resulting in shell and password

localShell = function()
	memory = metaxploit.scan(metaLib)
	for mem in memory
		address = metaxploit.scan_address(metaLib,mem).split("Unsafe check:")
		for add in address
			if add == address[0] then continue end if
			if shell and pass then quit(shell, pass) end if
			value = add[add.indexOf("<b>")+3:add.indexOf("</b>")]
			value = value.replace("\n", "")	
			result = metaLib.overflow(mem, value)
			if typeof(result) != "shell" and typeof(result) != "computer" then continue end if
			if typeof(result) == "shell" then
				shell = result
				comp = result.host_computer
				if typeof(result) == "computer" then
					comp = result.host_computer
				end if
				file = comp.File("/etc/passwd")
				if not file then continue end if
				cont = file.get_content
				if not cont then continue end if
				pass = cont.split("\n")[0]
				if shell and pass then quit(shell, pass) end if
			end if
		end for
	end for
	
	if shell then 
		shell.start_terminal
		if pass != null then print(pass) end if
	end if
	print("Attempt failed")	
end function


// Shift trough libs

meta = function()
	files = get_shell.host_computer.File("/lib")
	if not files or not files.is_folder then return
	files = files.get_files
	for file in files
		if not file.is_binary then continue
		Name = file.name
		metaLib = metaxploit.load("/lib/" + Name)
		if metaLib then localShell()
	end for
	print("<b>Exploit failed")
end function



//Code----------------------------------------------------

if params.len != 0 then
	if params.len >= 1 or params[0] == "-h" or params[0] == "-help" or params.len > 2 then exit("<b>Usage: "+program_path.split("/")[-1]+" [-opt] [test]</b>") end if
end if
	

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then metaxploit = include_lib(current_path + "/metaxploit.so") end if
if not metaxploit then exit("Error: Can't find metaxploit library in the /lib path or the current folder") end if

cryptools = include_lib("/lib/crypto.so")
if not cryptools then cryptools = include_lib(current_path + "/crypto.so") end if 

meta()

