Version = "v_a0.6.1"

comp = null
shell = null
pass = null
Name = get_shell.host_computer.File("/bin/xdecipher")
if Name != get_shell.host_computer.File("/bin/xdecipher") then get_shell.host_computer.File(current_path + "/xdecipher") end if






quit = function(shell, pass)
	if Name then
		get_shell.launch("/bin/xdecipher", pass)
	else
		print(pass)
	end if
	shell.start_terminal
end function


getShell = function()
	memory = metaxploit.scan(metaLib)
	for mem in memory
		address = metaxploit.scan_address(metaLib,mem).split("Unsafe check:")
		for add in address
			if add == address[0] then continue end if
			if shell and pass then quit(shell, pass) end if
			
			value = add[add.indexOf("<b>")+3:add.indexOf("</b>")]
			value = value.replace("\n", "")
			
			result = metaLib.overflow(mem, value)
			if typeof(result) != "shell" and typeof(result) != "computer" then continue end if
			if typeof(result) == "shell" then
				shell = result
				comp = result.host_computer
				if typeof(result) == "computer" then
					comp = result.host_computer
				end if
				file = comp.File("/etc/passwd")
				if not file then continue end if
				cont = file.get_content
				if not cont then continue end if
				pass = cont.split("\n")[0]
				if shell and pass then quit(shell, pass) end if
			end if
			
		end for
	end for

	if shell then 
		shell.start_terminal
		if pass != null then print(pass) end if
	end if
	print("Explot failed")
end function







if params.len < 1 or params[0] == "h" or params[0] == "help" or params.len > 2 then exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address] [-opt] [port]</b>") end if
address = params[0]

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then
	metaxploit = include_lib(current_path + "/metaxploit.so")
end if

if params.len != 2 then
	net_session = metaxploit.net_use( address )
else
	port = params[1].to_int
	net_session = metaxploit.net_use( address, port )
end if

if not metaxploit then exit("Error: Can't find metaxploit library in the /lib path or the current folder") end if
if not net_session then exit("Error: can't connect to net session") end if
metaLib = net_session.dump_lib


getShell()

